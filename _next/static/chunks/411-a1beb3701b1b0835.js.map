{"version":3,"file":"static/chunks/411-a1beb3701b1b0835.js","mappings":"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","sources":["webpack://_N_E/./src/components/Common/NotFound/Content/NotFoundContent.tsx","webpack://_N_E/./src/components/Common/NotFound/Section/NotFoundSection.tsx","webpack://_N_E/./src/utils/dates.ts","webpack://_N_E/./src/utils/strings.ts","webpack://_N_E/./src/utils/objects.ts","webpack://_N_E/./src/utils/index.ts","webpack://_N_E/./src/ui-elements/Spinner/Spinner.tsx","webpack://_N_E/./src/ui-elements/LoaderSplash/LoaderSplash.tsx","webpack://_N_E/./src/components/Article/ArticleWrapper/ArticleWrapper.tsx","webpack://_N_E/./src/components/Article/ArticleWrapper/withArticleWrapper.tsx","webpack://_N_E/./src/components/Article/ArticleWrapper/index.ts","webpack://_N_E/./src/components/Common/DebugData/DebugData.tsx","webpack://_N_E/./src/components/Common/NotFound/index.ts","webpack://_N_E/./src/components/Common/PlainHtmlBody/PlainHtmlBody.tsx","webpack://_N_E/./src/components/Common/index.ts","webpack://_N_E/./src/components/Article/ArticleView/ArticleView.tsx","webpack://_N_E/./src/components/Article/index.ts","webpack://_N_E/./src/components/Articles/ArticleCard/ArticleCard.tsx","webpack://_N_E/./src/components/Articles/ArticlesWrapper/ArticlesWrapper.tsx","webpack://_N_E/./src/components/Articles/ArticlesWrapper/withArticlesWrapper.tsx","webpack://_N_E/./src/components/Articles/ArticlesWrapper/index.ts","webpack://_N_E/./src/components/Articles/ArticlesList/ArticlesList.tsx","webpack://_N_E/./src/components/Articles/index.ts","webpack://_N_E/./src/components/index.ts","webpack://_N_E/./src/layout/HtmlHeader/HtmlHeader.tsx","webpack://_N_E/./src/ui-elements/Panel/Panel.tsx","webpack://_N_E/./src/ui-elements/HeaderSearchBox/HeaderSearchBox.tsx","webpack://_N_E/./src/layout-components/PageHeader/PageHeader.tsx","webpack://_N_E/./src/layout-components/PageFooter/PageFooter.tsx","webpack://_N_E/./src/layout-components/PageContent/PageContent.tsx","webpack://_N_E/./src/layout/GenericPageLayout/GenericPageLayout.tsx","webpack://_N_E/./src/components/Article/ArticleView/ArticleView.module.scss","webpack://_N_E/./src/components/Article/ArticleWrapper/ArticleWrapper.module.scss","webpack://_N_E/./src/components/Articles/ArticleCard/ArticleCard.module.scss","webpack://_N_E/./src/components/Articles/ArticlesList/ArticlesList.module.scss","webpack://_N_E/./src/components/Articles/ArticlesWrapper/ArticlesWrapper.module.scss","webpack://_N_E/./src/components/Common/NotFound/Content/NotFoundContent.module.scss","webpack://_N_E/./src/components/Common/NotFound/Section/NotFoundSection.module.scss","webpack://_N_E/./src/components/Common/PlainHtmlBody/PlainHtmlBody.module.scss","webpack://_N_E/./src/layout-components/PageContent/PageContent.module.scss","webpack://_N_E/./src/layout-components/PageFooter/PageFooter.module.scss","webpack://_N_E/./src/layout-components/PageHeader/PageHeader.module.scss","webpack://_N_E/./src/layout/GenericPageLayout/GenericPageLayout.module.scss","webpack://_N_E/./src/ui-elements/HeaderSearchBox/HeaderSearchBox.module.scss","webpack://_N_E/./src/ui-elements/LoaderSplash/LoaderSplash.module.scss","webpack://_N_E/./src/ui-elements/Panel/Panel.module.scss","webpack://_N_E/./src/ui-elements/Spinner/Spinner.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["/** @module NotFoundContent\n *  @since 2022.02.08, 22:44\n *  @changed 2023.01.31, 17:49\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport classnames from 'classnames';\nimport Link from 'next/link';\n\nimport styles from './NotFoundContent.module.scss';\n\ninterface TNotFoundContentProps {\n  className?: string;\n}\nfunction NotFoundContent(props: TNotFoundContentProps): JSX.Element {\n  const { className } = props;\n  const router = useRouter();\n  const [url, setUrl] = useState('none');\n  // NOTE: Preventing NextJS Warning: Text content did not match.\n  useEffect(() => {\n    setUrl(router.asPath);\n  }, [router]);\n  return (\n    <div className={classnames(className, styles.root)}>\n      <p>\n        Page <u>{url}</u> can not be found on this site.\n      </p>\n      <p>\n        Try to start from <Link href=\"/\">main page</Link>.\n      </p>\n    </div>\n  );\n}\n\nexport default NotFoundContent;\n","/** @module NotFoundSection\n *  @since 2022.02.08, 22:44\n *  @changed 2023.01.31, 22:43\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\nimport NotFoundContent from '../Content/NotFoundContent';\n\nimport styles from './NotFoundSection.module.scss';\n\ninterface TNotFoundSectionProps {\n  className?: string;\n}\n\nexport default function NotFoundSection(props: TNotFoundSectionProps): JSX.Element {\n  const { className } = props;\n  // TODO: Wrap with section, title etc...\n  return (\n    <div className={classnames(className, styles.root)}>\n      <NotFoundContent />\n    </div>\n  );\n}\n","/** @module strings\n *  @description Strings utilities\n *  @since 2023.02.01, 00:37\n *  @changed 2023.02.01, 00:37\n */\n\nimport * as constantsConfig from '@/config/constants';\nimport { format } from 'date-fns';\n\nexport function formatIsoDateString(dateStr: string, formatStr?: string): string {\n  if (!formatStr) {\n    formatStr = constantsConfig.dateTimeFormat;\n  }\n  const date = new Date(dateStr);\n  return format(date, formatStr);\n}\n","/** @module strings\n *  @description Strings utilities\n *  @since 2023.01.26, 20:43\n *  @changed 2023.01.29, 02:16\n */\n\nimport { AxiosError } from 'axios';\n\nimport { defaultQuote } from '@/config/constants';\n\n/**\n * @param {string} val\n * @return {number}\n */\nexport const toNumber = (val: string): number => {\n  return (val && typeof val !== 'number' && Number(val)) || 0;\n};\n/**\n * @param {string} val\n * @return {String}\n */\nexport const toString = (val: string): string => {\n  return val; // String(val);\n};\n/**\n * @param {string} val\n * @return {boolean}\n */\nexport const toBoolean = (val: string): boolean => {\n  return !!(val && val !== 'false' && val !== '0');\n};\n\nexport const typeTransforms = {\n  toNumber,\n  toString,\n  toBoolean,\n};\ntype TTypeTransformsKeys = keyof typeof typeTransforms;\n\n/** Returns length of common parts of two strings\n * @param {String} a\n * @param {String} b\n * @return {Number}\n */\nexport const getCommonLength = (a: string, b: string): number => {\n  const maxLen = Math.min(a.length, b.length);\n  let commonLen = 0;\n  for (let len = 1; len < maxLen; len++) {\n    const s = a.substring(0, len);\n    if (b.indexOf(s) === 0) {\n      commonLen = len;\n    }\n  }\n  return commonLen;\n};\n\n/** Uppercase first letter of string\n * @param {string} str\n * @return {str}\n */\nexport const ucFirst = (str: string): string => {\n  str = String(str);\n  return str && str.charAt(0).toUpperCase() + str.slice(1); // .toLowerCase();\n};\n\n/** Convert string to desired type\n * @param {string} type\n * @param {string} val\n * @return {*}\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const toType = (type: string, val: string): string | number | boolean => {\n  const methodName = ('to' + ucFirst(type)) as TTypeTransformsKeys;\n  let result: string | number | boolean = val;\n  if (\n    /* typeTransforms.hasOwnProperty(methodName) && */ typeof typeTransforms[methodName] ===\n    'function'\n  ) {\n    result = typeTransforms[methodName](val);\n  }\n  return result;\n};\n\n/**\n * @param {Number} length - Target hex string length\n * @return {String}\n */\nexport const randomHexString = (length: number): string => {\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += Math.floor(Math.random() * 0xf).toString(16);\n  }\n  return result;\n};\n\n/** Convert (mostly error responses) html to text\n * @param {String} html\n * @return {String}\n */\nexport const html2string = (html: string): string => {\n  return (\n    html &&\n    html // Process error from (html) response body\n      // .replace(/\\s*<head>[\\s\\S]*<\\/head>/m, '')\n      .replace(/\\s*<style>[\\s\\S]*<\\/style>/gm, '')\n      .replace(/<title>(.+)<\\/title>/gi, '$1:\\n')\n      .replace(/<[^<>]*>/g, ' ')\n      .replace(/\\r/gm, '\\n') // Newlines\n      .replace(/[ \\t]+\\n/gm, '\\n') // Hanged spaces\n      .replace(/\\n[ \\t]+/gm, '\\n') // Hanged spaces\n      .replace(/\\n{3,}/gm, '\\n\\n') // Extra newlines\n      .replace(/\\n(.+):*[ \\t\\n]+\\1\\n/gm, '\\n$1:\\n') // Remove repeating titles\n      // .replace(/\\n/gm, '\\\\n') // DEBUG: newlines\n      .trim()\n  ); // Trim\n};\n\n/* // TODO: Move to react strings helper?\n * export const splitMultiline = (text, opt) => {\n *   opt = opt || {}\n *   const textClassName = opt.textClassName || 'Text'\n *   const lineClassName = opt.lineClassName || 'TextLine'\n *   return text.split('\\n\\n').map((text, n) => {\n *     const lines = text.split('\\n').map((line, n) => {\n *       return React.createElement('div', { key: 'line' + String(n), className: lineClassName }, line)\n *     })\n *     return React.createElement('div', { key: 'text' + String(n), className: textClassName }, lines)\n *   })\n * }\n */\n\nexport function padNumber(num: number, size: number): string {\n  return String(num).padStart(size, '0');\n}\n\n/** Make periods for long numbers. Returns string presentation of number.\n * @param {String|Number} num\n * @param {String} [periodChar=' ']\n * @return {String}\n */\nexport function periodizeNumber(num: number, periodChar: string): string {\n  periodChar = periodChar || ' ';\n  let numStr = String(num);\n  // If long number...\n  if (numStr.length > 3 && !numStr.match(/\\D/)) {\n    numStr = numStr.replace(/\\B(?=(\\d{3})+(?!\\d))/g, periodChar);\n  }\n  return numStr;\n}\n\n/** humanizeId -- Make human-readable string from id (eg, 'thisId' -> 'This Id')\n * @param {String} id\n * @return {String}\n */\nexport function humanizeId(id: string): string {\n  return ucFirst(String(id)).replace(/\\B([A-Z][a-z]+)/g, ' $1');\n}\n\nexport function safeEscape(\n  str: string | number | boolean,\n  quote?: boolean | string,\n  addQuotes?: boolean,\n): string {\n  // Passed only addQuotes flag\n  if (quote === true && addQuotes == null) {\n    addQuotes = true;\n    quote = undefined;\n  }\n  quote = quote && typeof quote === 'string' ? quote : defaultQuote;\n  const quoteReg = new RegExp(quote, 'g');\n  str = String(str)\n    .replace(/\\\\/g, '\\\\\\\\')\n    .replace(quoteReg, '\\\\' + quote)\n    .replace(/\\n/g, '\\\\n')\n    .replace(/\\r/g, '\\\\r')\n    .replace(/\\t/g, '\\\\t')\n    // .replace(/\\b/g, '\\\\b')\n    .replace(/\\f/g, '\\\\f');\n\n  if (addQuotes === true && quote) {\n    str = quote + str + quote;\n  }\n  return str;\n}\n\nexport function errorToString(error: Error | AxiosError): string {\n  const metaError = error as Error & AxiosError;\n  /* // Error sample (AxiosError):\n   * code: \"ERR_NETWORK\"\n   * message: \"Network Error\"\n   * name: \"AxiosError\"\n   * stack: \"AxiosError: Network Error\\n    at XMLHttpRequest.handleError (webpack-internal:///./node_modules/axios/lib/adapters/xhr.js:168:14)\"\n   */\n  const {\n    code,\n    message,\n    name,\n    // stack\n  } = metaError;\n  return [name, code, message].filter(Boolean).join(': ');\n}\n","/** @module objects\n *  @descr Object helpers.\n *  @since 2023.01.26, 20:43\n *  @changed 2023.01.26, 20:43\n */\n\nimport {\n  squareOpen,\n  squareClose,\n  curlyOpen,\n  curlyClose,\n  errRegExp,\n  errDelim,\n  errDelim2,\n  maxShowStringLength,\n} from '@/config/constants';\n\nimport { safeEscape } from './strings';\n\nexport function reverseKeyAndValueReducer(\n  result: Record<string, string>,\n  [key, val]: [string, string],\n): Record<string, string> {\n  return { ...result, [val]: key };\n}\nexport function reverseDataHash(hash: Record<string, string>): Record<string, string> {\n  return Object.entries(hash).reduce(reverseKeyAndValueReducer, {});\n}\n\nexport function isDomElement(obj: HTMLElement): boolean {\n  return (\n    !!obj &&\n    (typeof HTMLElement === 'object'\n      ? obj instanceof HTMLElement // DOM2\n      : typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string')\n  );\n}\n\nexport function isArray(obj: unknown): boolean {\n  return Array.isArray(obj);\n}\n\nexport function arrayIndexOf(arr: string | unknown[], find: unknown): number {\n  if (!(arr instanceof Array) || !arr.length) {\n    return -1;\n  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === find) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nexport function asyncPromiseState(promise: Promise<unknown>): Promise<string> {\n  // See also `config.constants:promiseStatusTexts` -- for `vow` module\n  const temp = {};\n  return Promise.race([promise, temp]).then(\n    (value) => (value === temp ? 'PENDING' : 'FULFILLED'),\n    () => 'REJECTED',\n  );\n}\n\n/**\n * @param {} error\n * @return {object}\n */\ninterface ErrorLike {\n  message?: string;\n  errorMessages?: string[];\n  textStatus?: string;\n  error?: SingleError;\n  jqXHR?: XMLHttpRequest;\n  description?: string;\n  url?: string;\n  location?: string;\n  errorText?: string;\n  status?: string;\n  trace?: string[];\n}\ntype SingleError = string | Error | ErrorLike;\ntype PluralErrors = SingleError | SingleError[];\nexport function errorToPlainString(error: undefined | PluralErrors): string {\n  // opt = opt || {};\n\n  let text = '',\n    plusText,\n    match;\n\n  try {\n    if (\n      typeof error === 'string' &&\n      (match = error.match(/<soap:Text.*?>([\\s\\S]*)\\s*<\\/soap:Text/m)) != null &&\n      match[0]\n    ) {\n      text = '<b>SOAP error:</b> ' + match[1];\n    }\n    // If the error has already been processed or is empty, then we do not show anything\n    else if (!error) {\n      return '';\n    }\n    // If the error is not an object, we show it as a string\n    else if (typeof error !== 'object') {\n      text = String(error);\n    } else if (Array.isArray(error)) {\n      text = error.map(errorToPlainString).join(errDelim);\n    }\n    // Object with an error\n    else if (error instanceof Error) {\n      text = error.message || String(error);\n    } else if (typeof error.message === 'string') {\n      console.error('errors.errorToPlainString message', { error: error }); // eslint-disable-line no-console\n      text += error.message;\n    } else if (Array.isArray(error.errorMessages)) {\n      console.error('errors.errorToPlainString errorMessages', { error: error }); // eslint-disable-line no-console\n      text += error.errorMessages\n        .map(function (error: SingleError) {\n          return errorToPlainString(error);\n        })\n        .join(errDelim2);\n    } else if (error.textStatus === 'parsererror') {\n      text = 'Server response processing error';\n      plusText =\n        error.error ||\n        (error.jqXHR &&\n          error.jqXHR.responseText &&\n          (match = error.jqXHR.responseText.match(/<b>(Parse error|Fatal error).*/)) !== null &&\n          match[0]);\n      if (plusText) {\n        if (typeof plusText === 'string' && plusText.length > maxShowStringLength) {\n          plusText = plusText.substring(0, maxShowStringLength - 3) + '...';\n        }\n        text += errDelim + plusText;\n      }\n    } else if (error.jqXHR && !error.error && error.textStatus === 'error') {\n      text = 'Incorrect server response (the server is unavailable)';\n    } else if (error.error === 'jqXHR') {\n      console.error('errors.errorToPlainString jqXHR', { error: error }); // eslint-disable-line no-console\n      text = error.description || 'AJAX error';\n      const props = {\n          address: error.url || error.location,\n        },\n        propsText = Object.keys(props)\n          .filter((name: string) => !!props[name as keyof typeof props])\n          .map((name) => name + ': ' + props[name as keyof typeof props])\n          .join(', ');\n\n      if (propsText) {\n        text += ' (' + propsText + ')';\n      }\n      return text;\n    }\n    // Chaining errors\n    else if (error.error && typeof error.error === 'object') {\n      text += errorToPlainString(error.error);\n    }\n    // Server exception, like: {error: \"Exception\", errorCode: 0, description: \"Library\\Helper::getJsonResponse: Node error: ...\"}\n    else if (error.error === 'Exception' && error.description) {\n      text += 'Server exception: ' + error.description;\n    } else {\n      text =\n        error.description ||\n        error.message ||\n        error.error ||\n        error.errorText ||\n        error.status ||\n        'Unknown error';\n      if (text === 'canceledByUser') {\n        // TODO?\n        text = 'Canceled by user';\n      }\n      const plus = [];\n      if (error.jqXHR && error.jqXHR.responseText) {\n        plus.push(error.jqXHR.responseText);\n      }\n      if (error.error && typeof error.error === 'object') {\n        plus.push(error.error);\n      }\n      if (Array.isArray(error.trace)) {\n        plus.push('Error catched in: ' + error.trace.join(', '));\n      }\n      if (plus.length) {\n        text +=\n          errDelim2 +\n          plus\n            .map(function (plus) {\n              if (typeof plus === 'object') {\n                plus = errorToPlainString(plus);\n              }\n              if (typeof plus === 'string' && plus.match(/<html/i)) {\n                plus =\n                  'HTML: ' +\n                  plus\n                    .replace(/<(script|link|style)[^<>]*>[\\s\\S]*?<\\/\\1>/gm, '')\n                    .replace(/(\\s*<[^<>]*>\\s*)+/gm, ' ');\n              }\n              if (typeof plus === 'string' && plus.length > maxShowStringLength) {\n                plus = plus.substring(0, maxShowStringLength - 3) + '...';\n              }\n              return plus;\n            })\n            .join(errDelim);\n      }\n    }\n\n    // Strip extra spaces...\n    const result = text\n      .replace(/[ \\t]+\\n/gm, '\\n') // Hanged spaces\n      .replace(/\\n[ \\t]+/gm, '\\n') // Hanged spaces\n      .replace(/\\n{3,}/gm, '\\n\\n') // Extra newlines\n      .trim(); // Trim\n\n    return result;\n  } catch (error) {\n    console.error('errorToPlainString catched error:', { error: error }); // eslint-disable-line no-console\n    debugger; // eslint-disable-line no-debugger\n    // return String(error);\n    throw error;\n  }\n}\n\nexport function safeStringify(\n  this: unknown,\n  obj: unknown,\n  objId?: string,\n  depth?: number,\n  cache?: unknown[],\n  cacheNames?: string[],\n  nice?: boolean | number,\n): string {\n  objId = objId || '@';\n  depth = depth || 0;\n  cache = cache || [];\n  cacheNames = cacheNames || [];\n  try {\n    // Reusable variables...\n    let p, n, res, id, val, itemId;\n    // Nicify params...\n    let niceSpace = ''; // Single indent space\n    let niceBaseSpace = ''; // This depth level indent space\n    if (nice) {\n      niceSpace = ' ';\n      if (typeof nice === 'number') {\n        for (n = 1; n < nice; n++) {\n          niceSpace += ' ';\n        }\n      }\n      for (n = 0; n < depth; n++) {\n        niceBaseSpace += niceSpace;\n      }\n    }\n    const niceDepthSpace = niceBaseSpace + niceSpace; // This depth level indent space\n    const niceNL = nice ? '\\n' : ''; // Newline\n    if (obj == undefined || (typeof obj === 'number' && isNaN(obj))) {\n      // Null-like\n      return 'null'; // Only JSON symbol for undefined or null values\n    } else if (typeof obj === 'function') {\n      p = obj.name\n        ? 'function ' + obj.name\n        : obj.toString\n        ? safeEscape(obj.toString().replace(/[\\n\\r\\t ]+/g, ' '))\n        : 'anonymous function';\n      p = p.replace(/^(function\\s+\\S+)\\(.*$/, '$1');\n      if (p.length > 80) {\n        p = p.substring(0, 80 - 3) + '...';\n      }\n      return '\"[' + p + ']\"';\n    } else if (typeof obj === 'number' || typeof obj === 'boolean') {\n      // Simple type\n      return safeEscape(obj);\n    } else if (typeof obj === 'string' || typeof obj === 'boolean') {\n      // Quotable type\n      return safeEscape(obj, true);\n    } else if (isDomElement(obj as HTMLElement)) {\n      const domObj = obj as HTMLElement;\n      // domNode?\n      let domId = '';\n      if (domObj.nodeType) {\n        domId += '(nodeType:' + domObj.nodeType + ')';\n      }\n      if (domObj.className) {\n        domId += '.' + domObj.className.replace(/ /g, '.');\n      }\n      if (domObj.id) {\n        domId += '#' + domObj.id;\n      }\n      domId = '\"[DomNode: ' + safeEscape(domId) + ']\"';\n      return domId;\n    } else if (\n      typeof XMLHttpRequest === 'object' &&\n      obj instanceof XMLHttpRequest &&\n      (obj as XMLHttpRequest).readyState != null\n    ) {\n      // XHR?\n      // readyState values:\n      // 0 \tUNSENT \tClient has been created. open() not called yet.\n      // 1 \tOPENED \topen() has been called.\n      // 2 \tHEADERS_RECEIVED \tsend() has been called, and headers and status are available.\n      // 3 \tLOADING \tDownloading; responseText holds partial data.\n      // 4 \tDONE \tThe operation is complete.\n      const readyState = (obj as XMLHttpRequest).readyState;\n      let info = 'readyState:' + readyState;\n      if (readyState === 4) {\n        if ((obj as XMLHttpRequest).status) {\n          info += ',status:' + (obj as XMLHttpRequest).status;\n        }\n      }\n      return '\"[XHR ' + safeEscape(info) + ']\"';\n    }\n    // TODO: Event object\n    else if (obj instanceof Error) {\n      // Error?\n      // Using `UTILS.errorToPlainString` (included `errors` module to `UTILS`)\n      let message = errorToPlainString(obj);\n      let stack = String(obj.stack || '').replace(errRegExp, '');\n      // Remove message duplicate from beggining of stack info\n      if (stack.indexOf(message) === 0) {\n        stack = stack.substring(message.length).trim();\n      }\n      if (obj.name && obj.name !== 'Error') {\n        // oxpd-style error\n        message = '[' + obj.name + '] ' + message;\n      }\n      if (stack) {\n        message += '\\n' + stack;\n      }\n      return safeEscape('Error: ' + message, true);\n    } else if ((p = cache.indexOf(obj)) !== -1) {\n      // Cyclic reference?\n      const cacheId = cacheNames[p];\n      return '\"[cyclic: ' + safeEscape(cacheId) + ']\"';\n    } else if (obj instanceof Array /* || typeof obj[Symbol.iterator] === 'function' */) {\n      // Array?\n      cache.push(obj);\n      cacheNames.push(objId);\n      res = squareOpen;\n      for (n = 0; n < obj.length; n++) {\n        itemId = objId + squareOpen + n + squareClose;\n        val = obj[n];\n        if (n) {\n          res += ',';\n        }\n        res +=\n          niceNL + niceDepthSpace + safeStringify(val, itemId, depth + 1, cache, cacheNames, nice);\n      }\n      res += niceNL + niceBaseSpace + squareClose;\n      return res;\n    } else {\n      // Hash object...\n      cache.push(obj);\n      cacheNames.push(objId);\n      res = curlyOpen;\n      // var newObj = Object.keys(obj).reduce(function(newObj, id) {\n      p = Object.keys(obj) as string[];\n      p.sort();\n      for (n = 0; n < p.length; n++) {\n        id = p[n];\n        val = (obj as Record<string, unknown>)[id];\n        itemId = objId + (/\\W/.test(id) ? squareOpen + id + squareClose : '.' + id);\n        if (n) {\n          res += ',';\n        }\n        val = safeStringify(val, itemId, depth + 1, cache, cacheNames, nice);\n        val = safeEscape(id, true) + ':' + val;\n        res += niceNL + niceDepthSpace + val;\n      }\n      res += niceNL + niceBaseSpace + curlyClose;\n      return res;\n    }\n  } catch (error) {\n    console.error(error); // eslint-disable-line no-console\n    debugger; // eslint-disable-line no-debugger\n    throw error;\n  }\n}\n\nexport function niceStringify(data: unknown): string {\n  return safeStringify(data, undefined, undefined, undefined, undefined, true);\n}\n\ninterface DeepData {\n  a: number | { b: number };\n}\n/**\n * getDeepValue -- Fetch value (id may be hierarchial path like `Account.Login`)\n * @param {Object} data -- Data object\n * @param {String} dataId -- Field id (may be hierarchial path like `Account.Login`)\n */\nexport function getDeepValue(data: DeepData | null | undefined, dataId: string): unknown {\n  if (!data) {\n    return undefined;\n  }\n  let value = data;\n  if (typeof value === 'object' && dataId && typeof dataId === 'string') {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    dataId.split('.').forEach((chunkId) => (value = (value as any)[chunkId]));\n  }\n  return value;\n}\n\ninterface ObjectsDiff {\n  added?: string[];\n  removed?: string[];\n  diff?: string[];\n  equals?: string[];\n}\n/** Compare two objects.\n@return { added, removed, diff, [equals] }\n*/\nexport function getObjectsDiff(\n  objOld: { [x: string]: unknown; a?: number; b?: string } | undefined | null,\n  objNew: { [x: string]: unknown; a?: number; b?: string } | undefined | null,\n): ObjectsDiff {\n  if (objNew == undefined || objOld == undefined) {\n    // One of objects is undefined -- they're different.\n    return {};\n  }\n  const keysNew = Object.keys(objNew);\n  const keysOld = Object.keys(objOld);\n  const results: ObjectsDiff = {\n    // added: [],\n    // removed: [],\n    // diff: [],\n    // equals: [],\n  };\n  keysNew.forEach((key) => {\n    if (!keysOld.includes(key)) {\n      (results.added || (results.added = [])).push(key);\n    } else if (objNew[key] !== objOld[key]) {\n      (results.diff || (results.diff = [])).push(key);\n    }\n  });\n  keysOld.forEach((key) => {\n    if (!keysNew.includes(key)) {\n      (results.removed || (results.removed = [])).push(key);\n    }\n  });\n  return results;\n}\n","export * from './dates';\nexport * from './functions';\nexport * from './objects';\nexport * from './promises';\nexport * from './react-types';\nexport * from './strings';\nexport * from './typescript';\n","/** @module Spinner\n *  @since 2023.01.27, 20:59\n *  @changed 2023.01.27, 21:24\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport styles from './Spinner.module.scss';\n\nexport type TSpinnerSize = 'small' | 'medium' | 'large';\nexport type TSpinnerColor = 'primary' | 'white' | 'black';\n\ninterface TSpinnerProps {\n  className?: string;\n  size?: TSpinnerSize;\n  color?: TSpinnerColor;\n}\n\nexport default function Spinner(props: TSpinnerProps): JSX.Element {\n  const { className, size, color } = props;\n  const sizeId = size && 'size_' + size;\n  const colorId = color && 'color_' + color;\n  const resultedClassName = classnames(\n    className,\n    styles.container,\n    sizeId && styles[sizeId],\n    colorId && styles[colorId],\n  );\n  return <div className={resultedClassName} />;\n}\n","/** @module LoaderSplash\n *  @since 2023.01.27, 21:26\n *  @changed 2023.01.27, 21:26\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport Spinner, { TSpinnerSize, TSpinnerColor } from '@/ui-elements/Spinner';\n\nimport styles from './LoaderSplash.module.scss';\n\ntype TBackground = true | 'white' | 'gray' | 'neutral' | 'primary';\ntype TMode = 'cover';\n\ninterface TLoaderSplashProps {\n  className?: string;\n  spinnerSize?: TSpinnerSize;\n  spinnerColor?: TSpinnerColor;\n  fullSize?: boolean;\n  bg?: TBackground;\n  show?: boolean;\n  mode?: TMode;\n}\n\nexport default function LoaderSplash(props: TLoaderSplashProps): JSX.Element {\n  const { className, spinnerSize, spinnerColor, fullSize, bg, show = true, mode } = props;\n  const bgId = bg && ['bg', bg].filter((x) => typeof x === 'string').join('_');\n  const resultedClassName = classnames(\n    className,\n    styles.container,\n    mode && styles['mode_' + mode],\n    fullSize && styles.fullSize,\n    bgId && styles[bgId],\n    show || styles.hidden,\n  );\n  return (\n    <div className={resultedClassName}>\n      <Spinner className={styles.spinner} size={spinnerSize} color={spinnerColor} />\n    </div>\n  );\n}\n","/** @module ArticleWrapper\n *  @desc Adds flex layout, loaders and error around articles list.\n *  @since 2023.01.31, 22:57\n *  @changed 2023.01.31, 23:01\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { useArticleLoading, useArticleError } from '@/core/app/app-reducer';\nimport { errorToString, TReactContent } from '@/utils';\nimport LoaderSplash from '@/ui-elements/LoaderSplash';\n\nimport styles from './ArticleWrapper.module.scss';\n\ninterface TArticleWrapperProps {\n  className?: string;\n  children?: TReactContent;\n}\n\nexport function ArticleWrapper(props: TArticleWrapperProps): JSX.Element {\n  const { className, children } = props;\n\n  const isLoading = useArticleLoading();\n  const error = useArticleError();\n\n  // // TODO: To display 'no data' splash here?\n  // const article = useCurrentArticle();\n  // const isEmpty = !article;\n\n  return (\n    <div className={classnames(className, styles.container)}>\n      {error && <div className={styles.contentError}>{errorToString(error)}</div>}\n      <div className={styles.contentContainer}>{children}</div>\n      {/* Show large covering loader splash if no data loaded */}\n      <LoaderSplash\n        className={styles.loaderSplash}\n        show={isLoading}\n        spinnerSize=\"large\"\n        bg=\"white\"\n        mode=\"cover\"\n        fullSize\n      />\n    </div>\n  );\n}\n","/** @module withArticleWrapper\n *  @desc Wrapping any component (articles list with ArticleWrapper)\n *  @since 2023.01.31, 22:57\n *  @changed 2023.01.31, 22:57\n */\n\nimport React from 'react';\n\nimport { ArticleWrapper } from './ArticleWrapper';\n\ninterface TWithProps {\n  wrapperClassName?: string;\n}\n\nexport function withArticleWrapper<P extends JSX.IntrinsicAttributes>(\n  Component: React.ComponentType<P>,\n) {\n  return function WithArticleWrapper(props: P & TWithProps) {\n    const { wrapperClassName, ...componentProps } = props;\n    return (\n      <ArticleWrapper className={wrapperClassName}>\n        <Component {...(componentProps as P)} />\n      </ArticleWrapper>\n    );\n  };\n}\n","export * from './ArticleWrapper';\nexport * from './withArticleWrapper';\n","/** @module DebugData\n *  @since 2023.01.31, 23:16\n *  @changed 2023.01.31, 23:16\n */\n\nimport React, { useMemo } from 'react';\nimport classnames from 'classnames';\n\nimport styles from './DebugData.module.scss';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype TData = any;\n\ninterface TDebugDataProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  padded?: boolean;\n  data?: TData | string;\n}\n\n// DEBUG!\ninterface DebugDataItemProps {\n  id: string;\n  value?: string | number | boolean;\n}\nfunction DebugDataItem({ id, value }: DebugDataItemProps): JSX.Element {\n  return (\n    <div className={styles.dataItem}>\n      <span className={styles.dataItemLabel}>{id}:</span>{' '}\n      <span className={styles.dataItemValue}>{value}</span>\n    </div>\n  );\n}\n\ninterface TDebugDataContentProps {\n  data: TData;\n}\n\nfunction DebugDataContent({ data }: TDebugDataContentProps): JSX.Element {\n  const { id } = data;\n  // DEBUG: Display only data properties\n  const keys = data && (Object.keys(data) as string[]);\n  const items =\n    keys &&\n    keys.map((key: string) => {\n      const value = data[key as keyof TData] as string | boolean | number | undefined;\n      return !!value && <DebugDataItem key={id + ':' + key} id={key} value={value} />;\n    });\n  /* // DEBUG\n   * console.log('[DebugData:DEBUG]', {\n   *   items,\n   *   keys,\n   *   data,\n   * });\n   */\n  return <>{items}</>;\n}\n\nexport function DebugData(props: TDebugDataProps): JSX.Element {\n  const { className, padded, data } = props;\n  const content = useMemo(() => {\n    if (!data) {\n      // TODO: Throw an error?\n      return 'No data data object passed';\n    } else if (typeof data === 'string') {\n      return data;\n    } else {\n      return <DebugDataContent data={data} />;\n    }\n  }, [data]);\n  // prettier-ignore\n  return (\n    <div className={classnames(className, styles.container, padded && styles.padded)}>\n      {content}\n    </div>\n  );\n}\n","export * from './Content';\nexport * from './Section';\n","/** @module PlainHtmlBody\n *  @since 2023.02.01, 00:10\n *  @changed 2023.02.01, 00:10\n */\n\nimport classnames from 'classnames';\n\nimport styles from './PlainHtmlBody.module.scss';\n\ninterface TPlainHtmlBodyProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  padded?: boolean;\n  body: string;\n}\n\nexport function PlainHtmlBody(props: TPlainHtmlBodyProps): JSX.Element {\n  const { className, padded, body } = props;\n  // Parse links etc...\n  // TODO: Use internal nextjs links?\n  const parsedBody = body.replace(/https:\\/\\/www.theguardian.com\\//g, '/article/');\n  // prettier-ignore\n  return (\n    <div\n      className={classnames(className, styles.container, padded && styles.padded)}\n      dangerouslySetInnerHTML={{ __html: parsedBody }}\n    />\n  );\n}\n","export * from './DebugData';\nexport * from './NotFound';\nexport * from './PlainHtmlBody';\n","/** @module ArticleView\n *  @since 2023.01.29, 22:45\n *  @changed 2023.01.31, 23:06\n */\n\nimport React, { useEffect, useMemo } from 'react';\nimport classnames from 'classnames';\n\nimport { useAppDispatch } from '@/core/app/app-store';\nimport { TArticle, TArticleId } from '@/core/types';\nimport { useCurrentArticle } from '@/core/app/app-reducer';\nimport { setCurrentArticleId } from '@/features/article/reducer';\nimport { withArticleWrapper } from '../ArticleWrapper';\n\n// import { DebugData } from '@/components/Common/DebugData/DebugData';\nimport { PlainHtmlBody } from '@/components/Common';\n\nimport styles from './ArticleView.module.scss';\nimport { formatIsoDateString } from '@/utils';\n\ninterface TArticleViewByIdProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  id?: TArticleId;\n}\ninterface TArticleViewWithDataProps extends JSX.IntrinsicAttributes {\n  className?: string;\n  article?: TArticle | string;\n}\n\n// TODO?\ninterface TArticleViewContentProps {\n  article: TArticle;\n}\nfunction ArticleViewContent({ article }: TArticleViewContentProps): JSX.Element {\n  const {\n    // id,\n    webPublicationDate,\n    webTitle,\n    headline,\n    thumbnail,\n    body,\n  } = article;\n  /* // DEBUG\n   * console.log('[ArticleView:ArticleViewContent]', {\n   *   id,\n   *   webPublicationDate,\n   *   webTitle,\n   *   headline,\n   *   thumbnail,\n   *   article,\n   * });\n   */\n  const hasThumbnail = !!thumbnail;\n  const thumbnailStyle = hasThumbnail && { backgroundImage: 'url(' + thumbnail + ')' };\n  return (\n    <div className={classnames(styles.contentLayout)}>\n      <div className={classnames(styles.column, styles.mediaColumn)}>\n        {hasThumbnail && thumbnailStyle && (\n          <div className={classnames(styles.row, styles.thumbnailRow)}>\n            <div className={classnames(styles.thumbnail)} style={thumbnailStyle} />\n          </div>\n        )}\n      </div>\n      <div className={classnames(styles.column, styles.mainColumn)}>\n        <div className={classnames(styles.row, styles.bookmarksRow)}>\n          (Bookmarking controls: not implemented)\n        </div>\n        {webPublicationDate && (\n          <div className={classnames(styles.row, styles.dateRow)}>\n            {formatIsoDateString(webPublicationDate)}\n          </div>\n        )}\n        {webTitle && <div className={classnames(styles.row, styles.titleRow)}>{webTitle}</div>}\n        {headline && <div className={classnames(styles.row, styles.headlineRow)}>{headline}</div>}\n        {body && <PlainHtmlBody className={classnames(styles.row, styles.bodyRow)} body={body} />}\n      </div>\n    </div>\n  );\n}\n\nexport function ArticleViewWithData(props: TArticleViewWithDataProps): JSX.Element {\n  const { className, article } = props;\n  const content = useMemo(() => {\n    if (!article) {\n      // TODO: Throw an error?\n      return 'No article data found';\n    } else if (typeof article === 'string') {\n      return article;\n    } else {\n      // return <DebugData data={article} />; // DEBUG\n      return <ArticleViewContent article={article} />;\n    }\n  }, [article]);\n  /* // Sample article data:\n   * id: sport/live/2023/jan/28/elena-rybakina-v-aryna-sabalenka-australian-open-womens-singles-final-live\n   * type: liveblog\n   * sectionId: sport\n   * sectionName: Sport\n   * webPublicationDate: 2023-01-28T11:39:31Z\n   * webTitle: Aryna Sabalenka beats Elena Rybakina in Australian Open women’s singles final – as it happened\n   * webUrl: https://www.theguardian.com/sport/live/2023/jan/28/elena-rybakina-v-aryna-sabalenka-australian-open-womens-singles-final-live\n   * apiUrl: https://content.guardianapis.com/sport/live/2023/jan/28/elena-rybakina-v-aryna-sabalenka-australian-open-womens-singles-final-live\n   * pillarId: pillar/sport\n   * pillarName: Sport\n   * trailText: The Belarusian won her first grand slam in three sets, having lost the first to the Kazakh Wimbledon champion\n   * byline: John Brewin\n   * body: <div id=\"block-63d509228f085c034debc9d8\" class=\"block\" data-block-contributo...\n   * publication: theguardian.com\n   * shortUrl: https://www.theguardian.com/p/n82eq\n   * thumbnail: https://media.guim.co.uk/0823bb90f3fc656d08e162a32484d9cfd2d840e4/0_299_4487_2693/500.jpg\n   */\n  // prettier-ignore\n  return (\n    <div className={classnames(className, styles.container)}>\n      {content}\n    </div>\n  );\n}\n\nexport function ArticleViewById(props: TArticleViewByIdProps): JSX.Element {\n  const { className, id = '' } = props;\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setCurrentArticleId(id));\n  }, [id, dispatch]);\n  const article = useCurrentArticle();\n  return <ArticleViewWithData className={className} article={article} />;\n}\n\n// Export wrapped versions\nexport const WrappedArticleViewById = withArticleWrapper<TArticleViewByIdProps>(ArticleViewById);\nexport const WrappedArticleViewWithData =\n  withArticleWrapper<TArticleViewWithDataProps>(ArticleViewWithData);\n","export * from './ArticleView';\nexport * from './ArticleWrapper';\n","/** @module ArticleCard\n *  @since 2023.01.29, 22:45\n *  @changed 2023.01.30, 20:56\n */\n\nimport React, { useMemo } from 'react';\nimport classnames from 'classnames';\n\nimport { TArticle, TArticleId } from '@/core/types';\nimport { useArticleFromListById } from '@/core/app/app-reducer';\n\nimport styles from './ArticleCard.module.scss';\n\n// TODO: Move to types?\nconst articleCardTypes = [\n  'large', // 540x425\n  'medium', // 350x350\n  'small', // 255x255\n  'smallText', // 255x138\n] as const;\nexport type TArticleCardType = (typeof articleCardTypes)[number];\nexport const defaultArticleCardType: TArticleCardType = 'medium';\n\nconst defaultThumbnailUrl = '/images/assets/Logo_White.png';\n\n/* article data sample:\n * id: us-news/2023/jan/29/us-utilities-shut-off-power-to-millions-amid-record-profits\n * type: article\n * sectionId: us-news\n * sectionName: US news\n * webPublicationDate: 2023-01-30T05:01:08Z\n * webTitle: US utilities shut off power to millions amid record corporate profits – report\n * webUrl: https://www.theguardian.com/us-news/2023/jan/29/us-utilities-shut-off-power-to-millions-amid-record-profits\n * apiUrl: https://content.guardianapis.com/us-news/2023/jan/29/us-utilities-shut-off-power-to-millions-amid-record-profits\n * pillarId: pillar/news\n * pillarName: News\n * headline: US utilities shut off power to millions amid record corporate profits – report\n * standfirst: <p>Largest utilities spent billions on stock buybacks, dividend payments to shareholders and executive salaries, analysis finds</p>\n * trailText: Largest utilities spent billions on stock buybacks, dividend payments to shareholders and executive salaries, analysis finds\n * byline: Tom Perkins\n * body: <p>Some of America’s largest utilities cut power to millions of struggling customers in recent years even as they spent billions of dollars on...\n * publication: theguardian.com\n * shortUrl: https://www.theguardian.com/p/n8d2d\n * thumbnail: https://media.guim.co.uk/d78e50b932ec3118f3c17522a09250a29882ddd1/0_167_3000_1800/500.jpg\n */\n\ninterface TBasicDetailsProps {\n  cardType?: TArticleCardType;\n}\ninterface TArticleCardDetailsProps {\n  article: TArticle;\n  basicCardProps: TBasicDetailsProps;\n}\n\nfunction ArticleCardThumbnail({ article }: TArticleCardDetailsProps): JSX.Element {\n  const {\n    thumbnail, // https://media.guim.co.uk/d78e50b932ec3118f3c17522a09250a29882ddd1/0_167_3000_1800/500.jpg\n  } = article;\n  const noImage = !thumbnail;\n  const url = noImage ? defaultThumbnailUrl : thumbnail;\n  const className = classnames(styles.thumbnail, noImage && styles.thumbnailNoImage);\n  const style = { backgroundImage: 'url(' + url + ')' };\n  return <div className={className} style={style} />;\n}\n\nfunction ArticleCardText({ article, basicCardProps }: TArticleCardDetailsProps): JSX.Element {\n  const { cardType } = basicCardProps;\n  const {\n    // id, // us-news/2023/jan/29/us-utilities-shut-off-power-to-millions-amid-record-profits\n    // type, // article\n    // sectionId, // us-news\n    // sectionName, // US news\n    // webPublicationDate, // 2023-01-30T05:01:08Z\n    webTitle, // US utilities shut off power to millions amid record corporate profits – report\n    // webUrl, // https://www.theguardian.com/us-news/2023/jan/29/us-utilities-shut-off-power-to-millions-amid-record-profits\n    // apiUrl, // https://content.guardianapis.com/us-news/2023/jan/29/us-utilities-shut-off-power-to-millions-amid-record-profits\n    // pillarId, // pillar/news\n    // pillarName, // News\n    // headline, // US utilities shut off power to millions amid record corporate profits – report\n    // standfirst, // <p>Largest utilities spent billions on stock buybacks, dividend payments to shareholders and executive salaries, analysis finds</p>\n    // trailText, // Largest utilities spent billions on stock buybacks, dividend payments to shareholders and executive salaries, analysis finds\n    // byline, // Tom Perkins\n    body, // <p>Some of America’s largest utilities cut power to millions of struggling customers in recent years even as they spent billions of dollars on stock buybacks, dividend payments to shareholders and executive salaries, a <a href=\"https://www.biologicaldiversity.org/programs/energy-justice/pdfs/Powerless-in-the-US_Report.pdf\">new analysis</a> of industry data has found.</p> <p>The report also reveals that companies could use just a tiny fraction of their investor and executive spending to forgive debt at all households where power was cut.</p> <p>The shutoffs disproportionately affect low income and customers from communities of color, and the “harrowing” situation is driven by corporate profiteering, said Selah Goodson Bell, a study co-author and energy justice campaigner with the Center For Biological Diversity.</p> <p>Losing power has an often devastating impact on a household, including in terms of health and safety. “Shutoffs allow corporate utilities to punish customers’ economic precarity while guaranteeing record profits and massive payouts for themselves and their investors,” the authors wrote in the report. It was compiled with utility industry analyst Energy and Policy Institute and BailoutWatch.</p> <p>In the 30 states where shut off data was available, utilities cut service 1.5m times during the first 10 months of 2022, and an estimated 4.2m times nationwide. The report also reveals the issue is worsening: the number of electric shutoffs jumped by nearly one-third and gas shutoffs spiked by 76% between 2021 and the first 10 months of 2022.</p> <p>Illinois posted the highest number of shutoffs during that time period at over 500,000, and it was followed by Pennsylvania, Georgia, Michigan and Ohio. Exelon Corp, the parent company to utility giants like ComEd in Illinois and Peco in Pennsylvania, reported 648,000 shutoffs. It was followed by The Southern Co, DTE Energy, Ameren and FirstEnergy.</p> <p>Some of the companies that likely have the highest totals aren’t included. Between 2020-2021, Florida utilities shut off power 1.4m times, a “staggering” figure largely driven by NextEra’s Florida Light and Power division. But Florida no longer requires utilities to keep track of disconnections.</p> <p>The report highlighted how little utilities would need to cut into dividends, stock buybacks and executive salaries to forgive customer debt. It examined financial filings from 12 large utilities responsible for 86% of the shutoffs between January 2020 and October 2022.</p> <p>On average each spent about $4bn on dividends, and customer debt from their collective 4.9m shutoffs totaled about 1% of their dividend spending.</p> <p>“That was one of the data points that really hit home because that’s just such a small scrape of the amount of money that utilities are shelling out to shareholders that could really change lives in millions of households,” Goodson Bell said.</p> <p>FirstEnergy, which serves Maryland, Pennsylvania and Ohio, shut off power about 240,000 times for customer debts totalling about $25m. Meanwhile, the company paid $2.3bn in dividends.</p> <p>The 12 companies collectively paid about 70 top executives $1.2bn, or about $5.9m annually per executive.</p> <p>NextEra, which cut power most frequently before it was no longer required to report data, is much more generous to its executives and shareholders. The company paid the highest average pay-per-executive at $11.2m, and spent the second highest on dividends at $8.1bn.</p> <p>Increasing gas and electricity prices are partly driving the number of shutoffs, but so are regulatory decisions to allow companies to almost always pass on increased costs to customers. Utilities also continue investing in capital-intensive projects that in many cases are good for their investors but not cost effective for consumers, who could benefit from community solar, rooftop solar, or other distributed energy sources.</p> <p>As climate change creates more extreme hot and cold, more pressure is put on low income customers who can’t afford the extra use of a furnace or air conditioner.</p> <p>The authors say addressing the situation would require including uniform federal record keeping, a halt on new fossil fuel investment, and a ban on punitive billing practices. States could tax utility profits to pay off customer debt, design more effective debt relief programs, eliminate consumer debt, and develop a percentage-of-income-based payment plan.</p> <p>But the clearest solution, Goodson Bell said, is a ban on shutoffs.</p> <p>“Since we see energy as a human right and shut offs are not something that the utility industry needs to do to financially operate, we’re calling for a permanent ban,” he said.</p>\n    // publication, // theguardian.com\n    // shortUrl, // https://www.theguardian.com/p/n8d2d\n    thumbnail, // https://media.guim.co.uk/d78e50b932ec3118f3c17522a09250a29882ddd1/0_167_3000_1800/500.jpg\n  } = article;\n  const noImage = !thumbnail;\n  const className = classnames(styles.text, noImage && styles.noImage);\n  const showBody = cardType === 'large' && !!body;\n  const bodyPlain =\n    showBody &&\n    body\n      .replace(/<[^<>]*>/g, ' ')\n      .replace(/\\s\\s+/g, ' ')\n      .trim();\n  return (\n    <div className={className}>\n      <div className={styles.textTitle}>{webTitle}</div>\n      {showBody && <div className={styles.textBody}>{bodyPlain}</div>}\n    </div>\n  );\n}\n\nfunction ArticleCardContent({ article, basicCardProps }: TArticleCardDetailsProps): JSX.Element {\n  const { cardType } = basicCardProps;\n  // NOTE: All card types except `smallText` has image preview.\n  const hasThumbnail = cardType !== 'smallText';\n  return (\n    <>\n      {hasThumbnail && <ArticleCardThumbnail article={article} basicCardProps={basicCardProps} />}\n      <ArticleCardText article={article} basicCardProps={basicCardProps} />\n      {/* TODO: To fetch and pass parameters to customize color bar color (Using `ArticleCardColorBar` component)? */}\n      <div className={styles.colorBar} />\n    </>\n  );\n}\n\ninterface TArticleCardProps extends TBasicDetailsProps {\n  className?: string;\n  article?: TArticle | string;\n}\n\ninterface TArticleByCardProps extends TBasicDetailsProps {\n  className?: string;\n  id: TArticleId;\n}\n\nexport function ArticleCard(props: TArticleCardProps): JSX.Element {\n  const { className, article, ...basicCardProps } = props;\n  const { cardType = defaultArticleCardType } = basicCardProps;\n  const content = useMemo(() => {\n    if (!article) {\n      // TODO: Throw an error? Display empty block?\n      return 'Article data is not defined';\n    } else if (typeof article === 'string') {\n      return article;\n    } else {\n      return <ArticleCardContent article={article} basicCardProps={basicCardProps} />;\n    }\n  }, [article, basicCardProps]);\n  return (\n    <div className={classnames(className, styles.container, styles['cardType_' + cardType])}>\n      {content}\n    </div>\n  );\n}\n\n// Wrap bare (based on straght data) article renderer with data fetcher by id.\nexport function ArticleCardById(props: TArticleByCardProps): JSX.Element {\n  const { className, id, cardType = defaultArticleCardType } = props;\n  const article = useArticleFromListById(id) || 'No article data found for id ' + id;\n  return <ArticleCard className={className} cardType={cardType} article={article} />;\n}\n","/** @module ArticlesWrapper\n *  @desc Adds flex layout, loaders and error around articles list.\n *  @since 2023.01.30, 17:58\n *  @changed 2023.01.30, 19:10\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { useArticles, useArticlesLoading, useArticlesError } from '@/core/app/app-reducer';\nimport { errorToString, TReactContent } from '@/utils';\nimport LoaderSplash from '@/ui-elements/LoaderSplash';\n\nimport styles from './ArticlesWrapper.module.scss';\n\ninterface TArticlesWrapperProps {\n  className?: string;\n  children?: TReactContent;\n}\n\nexport function ArticlesWrapper(props: TArticlesWrapperProps): JSX.Element {\n  const { className, children } = props;\n\n  // TODO: Detect end-page scrolling and invoke next articles loading.\n\n  const isLoading = useArticlesLoading();\n  const error = useArticlesError();\n  const articles = useArticles();\n  const isEmpty = !articles.length;\n\n  return (\n    <div className={classnames(className, styles.container)}>\n      {error && <div className={styles.contentError}>{errorToString(error)}</div>}\n      <div className={styles.contentContainer}>{children}</div>\n      {/* Show small loader at the end of article items if some data has loaded */}\n      {isLoading && !isEmpty && (\n        <LoaderSplash\n          className={styles.smallLoader}\n          spinnerSize=\"small\"\n          show // Without animations!\n        />\n      )}\n      {/* Show large covering loader splash if no data loaded */}\n      <LoaderSplash\n        className={styles.loaderSplash}\n        show={isLoading && isEmpty}\n        spinnerSize=\"large\"\n        bg=\"white\"\n        mode=\"cover\"\n        fullSize\n      />\n    </div>\n  );\n}\n","/** @module withArticlesWrapper\n *  @desc Wrapping any component (articles list with ArticlesWrapper)\n *  @since 2023.01.30, 18:03\n *  @changed 2023.01.30, 19:15\n */\n\nimport React from 'react';\n\nimport { ArticlesWrapper } from './ArticlesWrapper';\n\ninterface TWithProps {\n  wrapperClassName?: string;\n}\n\nexport function withArticlesWrapper<P extends JSX.IntrinsicAttributes>(\n  Component: React.ComponentType<P>,\n) {\n  return function WithArticlesWrapper(props: P & TWithProps) {\n    const { wrapperClassName, ...componentProps } = props;\n    return (\n      <ArticlesWrapper className={wrapperClassName}>\n        <Component {...(componentProps as P)} />\n      </ArticlesWrapper>\n    );\n  };\n}\n","export * from './ArticlesWrapper';\nexport * from './withArticlesWrapper';\n","/** @module ArticlesList\n *  @since 2023.01.27, 19:57\n *  @changed 2023.01.30, 19:24\n */\n\nimport React, { useMemo } from 'react';\nimport classnames from 'classnames';\n\nimport { useArticles } from '@/core/app/app-reducer';\nimport { ArticleCardById } from '../ArticleCard';\nimport { withArticlesWrapper } from '../ArticlesWrapper';\n\nimport styles from './ArticlesList.module.scss';\n\ninterface TArticlesListProps extends JSX.IntrinsicAttributes {\n  className?: string;\n}\n\n// TODO 2023.01.30, 19:23 -- Receive article ids list top display (and display\n// all available articles if this list is omited).\n\nexport function ArticlesList(props: TArticlesListProps): JSX.Element {\n  const { className } = props;\n\n  // TODO: Detect end-page scrolling and invoke next articles loading. (To do it in the wrapper?)\n\n  const articles = useArticles();\n\n  const content = useMemo(() => {\n    return articles.map(({ id }) => (\n      <ArticleCardById\n        // cardType=\"large\"\n        // cardType=\"smallText\"\n        // cardType=\"small\"\n        cardType=\"medium\"\n        key={id}\n        id={id}\n      />\n    ));\n  }, [articles]);\n\n  return <div className={classnames(className, styles.container)}>{content}</div>;\n}\n\n// Export wrapped version\nexport const WrappedArticleList = withArticlesWrapper<TArticlesListProps>(ArticlesList);\n","export * from './ArticleCard';\nexport * from './ArticlesList';\nexport * from './ArticlesWrapper';\n","export * from './Article';\nexport * from './Articles';\nexport * from './Common';\n","/** @module HtmlHeader\n *  @desc Renders parameters for `head` page part (title, meta-data, etc).\n *  @since 2023.01.26, 23:51\n *  @changed 2023.01.26, 23:51\n */\n\nimport * as React from 'react';\nimport Head from 'next/head';\n\nimport * as siteConfig from '@/config/site';\n\nexport interface THtmlHeaderProps {\n  title?: string;\n  descr?: string;\n  keywords?: string | string[];\n}\n\n/** getPropValue -- Get value from props or site config\n * @param {string} id\n * @param {object} props\n * @return {string}}\n */\nfunction getPropValue(id: keyof THtmlHeaderProps, props: THtmlHeaderProps): string {\n  let val: unknown = props[id]; // Later will be converted to string\n  if (val == null) {\n    val = siteConfig[id];\n  }\n  if (val && Array.isArray(val)) {\n    val = val.join(', ');\n  }\n  return String(val);\n}\n\nexport default function HtmlHeader(props: THtmlHeaderProps): JSX.Element {\n  const title = getPropValue('title', props);\n  const descr = getPropValue('descr', props);\n  const keywords = getPropValue('keywords', props);\n  return (\n    <Head>\n      <title>{title}</title>\n      <meta name=\"title\" content={title} />\n      <meta name=\"description\" content={descr} />\n      <meta name=\"keywords\" content={keywords} />\n    </Head>\n  );\n}\n","/** @module Panel\n *  @since 2023.01.27, 16:47\n *  @changed 2023.01.27, 19:24\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\n\nimport styles from './Panel.module.scss';\n\ninterface TPanelProps {\n  tag?: string;\n  className?: string;\n  wrapperClassName?: string;\n  children?: TReactContent;\n  flex?: boolean;\n  flexVertical?: boolean;\n  padded?: boolean;\n}\n\nexport default function Panel(props: TPanelProps): JSX.Element {\n  const { tag = 'div', className, wrapperClassName, children, flex, flexVertical, padded } = props;\n  const renderProps = {\n    className: classnames(className, styles.container, padded && styles.padded),\n  };\n  const renderContent = (\n    <div\n      className={classnames(\n        wrapperClassName,\n        styles.wrapper,\n        flex && styles.flex,\n        flexVertical && styles.flexVertical,\n      )}\n    >\n      {children}\n    </div>\n  );\n  return React.createElement(tag, renderProps, renderContent);\n}\n","/** @module HeaderSearchBox\n *  @since 2023.01.27, 17:33\n *  @changed 2023.01.27, 17:44\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport styles from './HeaderSearchBox.module.scss';\n\ninterface THeaderSearchBoxProps {\n  className?: string;\n  // TODO: Apply search callback\n}\n\nexport default function HeaderSearchBox(props: THeaderSearchBoxProps): JSX.Element {\n  const { className } = props;\n  // TODO: Make a link from logo if not root page.\n  return (\n    <div className={classnames(className, styles.container)}>\n      <div className={classnames(styles.icon)} />\n    </div>\n  );\n}\n","/** @module PageHeader\n *  @since 2023.01.27, 16:20\n *  @changed 2023.01.27, 16:20\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport Panel from '@/ui-elements/Panel';\nimport HeaderSearchBox from '@/ui-elements/HeaderSearchBox';\n\nimport styles from './PageHeader.module.scss';\n\ninterface TPageHeaderProps {\n  className?: string;\n  rootPage?: boolean;\n}\n\nexport default function PageHeader(props: TPageHeaderProps): JSX.Element {\n  const { className, rootPage } = props;\n  // TODO: Make a link from logo if not rootPage page.\n  return (\n    <Panel\n      className={classnames(className, styles.container, rootPage && styles.rootPage)}\n      tag=\"header\"\n      flex\n    >\n      <div className={classnames(styles.box, styles.logoBox)} />\n      <div className={classnames(styles.box, styles.searchBox)}>\n        <HeaderSearchBox />\n      </div>\n    </Panel>\n  );\n}\n","/** @module PageFooter\n *  @since 2023.01.27, 16:20\n *  @changed 2023.01.27, 16:20\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport Panel from '@/ui-elements/Panel';\n\nimport styles from './PageFooter.module.scss';\n\ninterface TPageFooterProps {\n  className?: string;\n  rootPage?: boolean;\n}\n\nexport default function PageFooter(props: TPageFooterProps): JSX.Element {\n  const { className, rootPage } = props;\n  return (\n    <Panel\n      className={classnames(className, styles.container, rootPage && styles.rootPage)}\n      tag=\"footer\"\n      flex\n    />\n  );\n}\n","/** @module PageContent\n *  @since 2023.01.27, 16:20\n *  @changed 2023.01.27, 19:13\n */\n\nimport React from 'react';\nimport classnames from 'classnames';\n\nimport { TReactContent } from '@/utils/react-types';\nimport Panel from '@/ui-elements/Panel';\n\nimport styles from './PageContent.module.scss';\n\ninterface TPageContentProps {\n  className?: string;\n  rootPage?: boolean;\n  children?: TReactContent;\n}\n\nexport default function PageContent(props: TPageContentProps): JSX.Element {\n  const { children, className, rootPage } = props;\n  return (\n    <Panel\n      className={classnames(className, styles.container, rootPage && styles.rootPage)}\n      tag=\"section\"\n      flex\n    >\n      {children}\n    </Panel>\n  );\n}\n","/** @module GenericPageLayout\n *  @desc Renders parameters for `head` page part (title, meta-data, etc).\n *  @since 2023.01.26, 23:51\n *  @changed 2023.01.26, 23:51\n */\n\nimport * as React from 'react';\n// import config from '@/config';\nimport { TReactContent } from '@/utils/react-types';\nimport classnames from 'classnames';\nimport { THtmlHeaderProps } from '@/layout/HtmlHeader/HtmlHeader';\nimport HtmlHeader from '@/layout/HtmlHeader';\nimport PageHeader from '@/layout-components/PageHeader';\nimport PageFooter from '@/layout-components/PageFooter';\nimport PageContent from '@/layout-components/PageContent';\n\nimport styles from './GenericPageLayout.module.scss';\n\nexport interface TGenericPageLayoutProps extends THtmlHeaderProps {\n  className?: string;\n  children?: TReactContent;\n  rootPage?: boolean;\n}\n\nexport default function GenericPageLayout(props: TGenericPageLayoutProps): JSX.Element {\n  // NOTE: Get props from nextjs (as `pageProps`)\n  const { className, children, rootPage, ...restProps } = props;\n  // prettier-ignore\n  return (\n    <div className={classnames(className, styles.container, rootPage && styles.containerRoot)}>\n      <HtmlHeader {...restProps} />\n      <PageHeader rootPage={rootPage} />\n      <PageContent className={styles.content} rootPage={rootPage}>\n        {children}\n      </PageContent>\n      <PageFooter rootPage={rootPage} />\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArticleView_container__nZHhC\",\"bodyRow\":\"ArticleView_bodyRow__qD_Xm\",\"bookmarksRow\":\"ArticleView_bookmarksRow__wmx2v\",\"column\":\"ArticleView_column__q_mHp\",\"contentLayout\":\"ArticleView_contentLayout__9eQlL\",\"dateRow\":\"ArticleView_dateRow__cKG9q\",\"headlineRow\":\"ArticleView_headlineRow__fRUl8\",\"mainColumn\":\"ArticleView_mainColumn__kM_L6\",\"mediaColumn\":\"ArticleView_mediaColumn__0OPEj\",\"row\":\"ArticleView_row__OSDHR\",\"thumbnailRow\":\"ArticleView_thumbnailRow__a5iIF\",\"titleRow\":\"ArticleView_titleRow__HvRqZ\",\"DEBUG\":\"ArticleView_DEBUG__UBmNy\",\"thumbnail\":\"ArticleView_thumbnail__8Nibx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArticleWrapper_container__rfdr8\",\"contentError\":\"ArticleWrapper_contentError__QrqIO\",\"contentContainer\":\"ArticleWrapper_contentContainer__LG9Zx\",\"smallLoader\":\"ArticleWrapper_smallLoader__srLgM\",\"loaderSplash\":\"ArticleWrapper_loaderSplash__vvlHs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArticleCard_container__uzb1k\",\"colorBar\":\"ArticleCard_colorBar__Xlbfq\",\"text\":\"ArticleCard_text__Rp7fJ\",\"thumbnail\":\"ArticleCard_thumbnail__ya90G\",\"thumbnailNoImage\":\"ArticleCard_thumbnailNoImage__YH1yf\",\"textNoImage\":\"ArticleCard_textNoImage__Y2wfr\",\"textTitle\":\"ArticleCard_textTitle__G3jZO\",\"textBody\":\"ArticleCard_textBody__6lsGt\",\"cardType_medium\":\"ArticleCard_cardType_medium__7DvtM\",\"cardType_small\":\"ArticleCard_cardType_small__QvXel\",\"cardType_smallText\":\"ArticleCard_cardType_smallText__zFBR5\",\"cardType_large\":\"ArticleCard_cardType_large__7tH8y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArticlesList_container__IgjCd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ArticlesWrapper_container__OPpJ5\",\"contentError\":\"ArticlesWrapper_contentError__2tVQ_\",\"contentContainer\":\"ArticlesWrapper_contentContainer__qBBxD\",\"smallLoader\":\"ArticlesWrapper_smallLoader__Nl_Vw\",\"loaderSplash\":\"ArticlesWrapper_loaderSplash__J0_qb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NotFoundContent_root__Svu0Y\",\"NotFoundItem\":\"NotFoundContent_NotFoundItem__XW35Z\",\"NotFoundItemIcon\":\"NotFoundContent_NotFoundItemIcon__Xy8kw\",\"NotFoundItemText\":\"NotFoundContent_NotFoundItemText__5E6CH\",\"DEBUG\":\"NotFoundContent_DEBUG__BAWMM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"NotFoundSection_root__YOQ_f\",\"DEBUG\":\"NotFoundSection_DEBUG__tULS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PlainHtmlBody_container__puOyv\",\"padded\":\"PlainHtmlBody_padded__1_t_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootPage\":\"PageContent_rootPage__ZQa_M\",\"container\":\"PageContent_container__1_BG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootPage\":\"PageFooter_rootPage__sh5T8\",\"container\":\"PageFooter_container__G_63f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rootPage\":\"PageHeader_rootPage__T9g4i\",\"container\":\"PageHeader_container__UWZ2z\",\"box\":\"PageHeader_box__7EkES\",\"logoBox\":\"PageHeader_logoBox__oi5g1\",\"searchBox\":\"PageHeader_searchBox__zSGpc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GenericPageLayout_container__6wfO_\",\"mainContainer\":\"GenericPageLayout_mainContainer__dWPUC\",\"containerRoot\":\"GenericPageLayout_containerRoot__peRp0\",\"DEBUG\":\"GenericPageLayout_DEBUG__ESCur\",\"content\":\"GenericPageLayout_content__ifJ57\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderSearchBox_container__aqxDM\",\"icon\":\"HeaderSearchBox_icon___d20A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoaderSplash_container__Z_Zwm\",\"mode_cover\":\"LoaderSplash_mode_cover__CVWLz\",\"hidden\":\"LoaderSplash_hidden__oqNjA\",\"bg\":\"LoaderSplash_bg__wbmMc\",\"bg_white\":\"LoaderSplash_bg_white__o3zcP\",\"bg_primary\":\"LoaderSplash_bg_primary__Q8Au7\",\"bg_neutral\":\"LoaderSplash_bg_neutral__IyyQQ\",\"bg_gray\":\"LoaderSplash_bg_gray__CC1m_\",\"fullSize\":\"LoaderSplash_fullSize__ZLmyx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Panel_container__d3Lxe\",\"padded\":\"Panel_padded__zaP_Y\",\"wrapper\":\"Panel_wrapper__4csAp\",\"flex\":\"Panel_flex__hJheN\",\"flexVertical\":\"Panel_flexVertical__PMdES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Spinner_container__Dznuk\",\"size_medium\":\"Spinner_size_medium__Hj6T0\",\"size_small\":\"Spinner_size_small__BAmmx\",\"size_large\":\"Spinner_size_large__kW37A\",\"rotating-spinner\":\"Spinner_rotating-spinner__x_PlG\",\"color_white\":\"Spinner_color_white__tx090\",\"color_black\":\"Spinner_color_black__wGkDE\"};"],"names":["__webpack_exports__","props","className","router","useRouter","useState","url","setUrl","useEffect","asPath","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","classnames","styles","p","jsx","u","Link","href","NotFoundSection","NotFoundContent","Component","errorToString","error","code","metaError","message","name","filter","Boolean","join","Spinner","size","color","sizeId","colorId","resultedClassName","jsx_runtime","LoaderSplash","spinnerSize","spinnerColor","fullSize","bg","show","mode","bgId","x","_props_show","ArticleWrapper","children","isLoading","useArticleLoading","useArticleError","withArticleWrapper","wrapperClassName","componentProps","PlainHtmlBody","padded","parsedBody","body","replace","dangerouslySetInnerHTML","__html","ArticleViewContent","param","formatStr","date","article","webPublicationDate","webTitle","headline","thumbnail","hasThumbnail","thumbnailStyle","backgroundImage","style","constantsConfig","Date","format","ArticleViewWithData","content","useMemo","WrappedArticleViewById","id","_props_id","dispatch","useAppDispatch","setCurrentArticleId","useCurrentArticle","defaultArticleCardType","ArticleCardThumbnail","noImage","ArticleCardText","cardType","basicCardProps","showBody","bodyPlain","trim","ArticleCardContent","Fragment","ArticleCard","_basicCardProps_cardType","ArticleCardById","useArticleFromListById","ArticlesWrapper","useArticlesLoading","useArticlesError","isEmpty","articles","useArticles","length","WrappedArticleList","map","getPropValue","val","siteConfig","Array","isArray","String","HtmlHeader","title","descr","keywords","Head","meta","Panel","_props_tag","tag","flex","flexVertical","renderProps","renderContent","React","HeaderSearchBox","PageHeader","rootPage","PageFooter","PageContent","GenericPageLayout","restProps","module","exports"],"sourceRoot":""}